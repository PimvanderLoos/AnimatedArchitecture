<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>structures</artifactId>
    <packaging>pom</packaging>
    <description>Modules for the different types of Doors</description>

    <parent>
        <groupId>nl.pim16aap2.animatedarchitecture</groupId>
        <artifactId>animatedarchitecture-parent</artifactId>
        <version>0.7.2</version>
    </parent>

    <modules>
        <module>structure-bigdoor</module>
        <module>structure-clock</module>
        <module>structure-drawbridge</module>
        <module>structure-flag</module>
        <module>structure-garagedoor</module>
        <module>structure-portcullis</module>
        <module>structure-revolvingdoor</module>
        <module>structure-slidingdoor</module>
        <module>structure-windmill</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>nl.pim16aap2.animatedarchitecture</groupId>
            <artifactId>animatedarchitecture-core</artifactId>
            <version>0.7.2</version>
        </dependency>

        <dependency>
            <groupId>nl.pim16aap2.animatedarchitecture</groupId>
            <artifactId>animatedarchitecture-core</artifactId>
            <version>0.7.2</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>nl.pim16aap2</groupId>
            <artifactId>test-util</artifactId>
            <version>0.7.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <project.root-dir>${project.basedir}/..</project.root-dir>

        <!--
        The path to the main class, e.g. com.example.project.Main
        The main class is supposed to be the class that extends StructureType
        -->
        <mainClass>UNDEFINED</mainClass>

        <!--
        The namespace of the type, e.g. animatedarchitecture

        This is used to avoid conflicts between different types with the same name.

        The namespace can contain letters, numbers, dashes, and underscores.
        -->
        <namespace>animatedarchitecture</namespace>

        <!--
        The name of the type, e.g. BigDoor
        This is used for the name of the jar file

        The name can contain letters, numbers, dashes, and underscores.
        -->
        <typeName>UNDEFINED</typeName>

        <!--
        The (non-negative) version of the type, e.g. 1
        -->
        <typeVersion>UNDEFINED</typeVersion>

        <!--
        The supported API version(s) of the structure type.

        This refers to the API version of the extension system that the structure type is compatible with.

        A structure can specify this in 2 ways:
        1) A single version:
           - `1.0.0`
           - `>=1.0.0`
           - `1.x` / `1.*`
        2) A range of versions: `1.0.0 - 1.1.0`

        If the structure type is incompatible with the API version at runtime, the structure type will not be loaded.
        -->
        <supportedApiVersions>UNDEFINED</supportedApiVersions>

        <!--
        The dependencies of the structure type.
        This is a string that contains a space-separated list of dependencies in the format
        `<namespace>:<typeName>(minVersion;maxVersion)`.
        For example: `animatedarchitecture:portcullis(1;5) animatedarchitecture:door(1;1)`. (Without the backticks.)

        Both the minimum and the maximum versions of the dependency are inclusive.

        Any dependencies listed here will be required at runtime for this structure type to be loaded.
        -->
        <TypeDependencies/>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${dependency.maven-jar.version}</version>
                    <configuration>
                        <outputDirectory>../StructuresOutput/</outputDirectory>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <mainClass>${mainClass}</mainClass>
                            </manifest>
                            <manifestSections>
                                <manifestSection>
                                    <name>StructureTypeMetadata</name>
                                    <manifestEntries>
                                        <Namespace>${namespace}</Namespace>
                                        <TypeName>${typeName}</TypeName>
                                        <Version>${typeVersion}</Version>
                                        <SupportedApiVersions>${supportedApiVersions}</SupportedApiVersions>
                                        <TypeDependencies>${TypeDependencies}</TypeDependencies>
                                    </manifestEntries>
                                </manifestSection>
                            </manifestSections>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <configuration>
                        <!--
                        We do not want to shade anything into the resulting jars
                        This is explicitly required here because we're exporting to separate jars
                        -->
                        <artifactSet>
                            <includes>
                                <include>nl.pim16aap2.animatedarchitecture.structures:*</include>
                            </includes>
                        </artifactSet>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
